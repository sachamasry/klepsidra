<.header>
  <%= @timer.start_stamp %>â€“<%= @timer.end_stamp %>
  <%= if is_nil(@timer.end_stamp), do: "(Running timer)" %>
  <:subtitle></:subtitle>
  <:actions>
    <.link :if={is_nil(@timer.end_stamp)} patch={~p"/timers/#{@timer.id}/stop-timer"}>
      <.outline_button>Stop timer</.outline_button>
    </.link>
    <.link patch={~p"/timers/#{@timer}/show/edit"} phx-click={JS.push_focus()}>
      <.outline_button>Edit timer</.outline_button>
    </.link>
    <.link patch={~p"/timers/#{@timer}/new-note"} phx-click={JS.push_focus()}>
      <.outline_button>New Note</.outline_button>
    </.link>
  </:actions>
</.header>

<section class="max-w-prose">
  <%= @timer_description %>
</section>

<.form
  for={@live_select_form}
  id="live-select-form"
  class="mt-6"
  phx-change="change"
  phx-window-keyup="key_up"
>
  <div id="tag-selector--show" class={"flex #{if @selected_tag_queue != [], do: "gap-2"}"}>
    <div
      id="tag-selector__live-select--show"
      phx-mounted={JS.add_class("hidden", to: "#tag_form_tag_search_text_input")}
    >
      <.live_select
        field={@live_select_form[:tag_search]}
        mode={:tags}
        label=""
        options={[]}
        placeholder="Add tag"
        debounce={80}
        clear_tag_button_class="cursor-pointer px-1 rounded-r-md"
        dropdown_extra_class="bg-white max-h-48 overflow-y-scroll"
        tag_class="bg-slate-400 text-white flex rounded-md text-sm font-semibold"
        tags_container_class="flex flex-wrap gap-2"
        container_extra_class="rounded border border-none"
        update_min_len={1}
        user_defined_options="true"
        value={@selected_tags}
        phx-blur="ls_tag_search_blur"
      >
        <:option :let={option}>
          <div class="flex" title={option.description}>
            <%= option.label %>
          </div>
        </:option>
        <:tag :let={option}>
          <div
            class={"tag-#{DynamicCSS.convert_tag_name_to_class(option.label)} py-1.5 px-3 rounded-l-md"}
            title={option.description}
          >
            <.link navigate={~p"/tags/#{option.value}"}>
              <%= option.label %>
            </.link>
          </div>
        </:tag>
      </.live_select>
    </div>

    <div
      id="tag-selector__colour-select--show"
      class="tag-colour-picker hidden w-10 overflow-hidden self-end shrink-0"
    >
      <.input field={@live_select_form[:bg_colour]} type="color" value={elem(@new_tag_colour, 0)} />
    </div>

    <.tag_add_button id="tag-selector__add-button--show" phx-click={enable_tag_selector()}>
      Add tag <.icon name="hero-plus" />
    </.tag_add_button>
  </div>
</.form>

<.list>
  <:item title="Start time"><%= @timer.start_stamp %></:item>
  <:item title="End time"><%= @timer.end_stamp %></:item>
  <:item title="Duration"><%= @timer.duration %></:item>
  <:item title="Duration time unit"><%= @timer.duration_time_unit %></:item>
  <:item title="Billable duration"><%= @timer.billing_duration %></:item>
  <:item title="Billable duration time unit"><%= @timer.billing_duration_time_unit %></:item>
</.list>

<.back navigate={"#{@return_to}"}>Back to activity timers</.back>

<h2 class="border-p rounded-2xl mt-10 px-6 py-4 text-lg font-medium bg-gradient-to-r from-violet-900 from-15% via-violet-700 via-65% to-purple-900 to-95% text-white">
  <%= @notes_title %>
</h2>

<.live_component
  module={NoteFormComponent}
  id={:new_note}
  timer_id={@timer_id}
  action={:new_embedded_note}
/>

<div id="timer-notes" phx-update="stream" class="timer-notes mt-6 divide-y divide-violet-100">
  <div :for={{note_id, note} <- @streams.notes} id={note_id} class="my-6">
    <div class="timer-notes__datetime mt-6 text-violet-800 font-medium">
      <%= note.inserted_at |> Cldr.DateTime.to_string!() %>
    </div>
    <div class="timer-notes__note max-w-prose markdown-content my-6">
      <%= Earmark.as_html!(note.note,
        compact_output: true,
        code_class_prefix: "lang-",
        smartypants: true
      )
      |> HtmlSanitizeEx.html5()
      |> Phoenix.HTML.raw() %>
    </div>

    <.link patch={~p"/timers/#{@timer}/notes/#{note.id}/edit"} phx-click={JS.push_focus()}>
      <.button>Edit note</.button>
    </.link>
    <.button
      phx-click={JS.push("delete_note", value: %{id: note.id})}
      data-confirm="Are you sure you want to delete this note?"
    >
      Delete
    </.button>
  </div>
</div>

<.back navigate={"#{@return_to}"}>Back to activity timers</.back>

<.modal
  :if={@live_action == :edit_timer}
  id="timer-modal"
  show
  on_cancel={JS.patch(~p"/timers/#{@timer}")}
>
  <.live_component
    module={KlepsidraWeb.TimerLive.FormComponent}
    id={@timer.id}
    title={@page_title}
    action={@live_action}
    timer={@timer}
    invocation_context={if @live_action == :new_timer, do: :new_timer, else: :edit_timer}
    patch={~p"/timers/#{@timer}"}
    parent_tag_select_id="tag_form_tag_search_live_select_component"
  />
</.modal>

<.modal
  :if={@live_action in [:stop_timer]}
  id="timer-modal"
  show
  on_cancel={JS.patch(~p"/timers/#{@timer.id}")}
>
  <.live_component
    module={KlepsidraWeb.TimerLive.AutomatedTimer}
    id={@timer.id}
    title="Stopping timer"
    action={@live_action}
    timer={@timer}
    invocation_context={:stop_timer}
    patch={~p"/timers/#{@timer.id}"}
    parent_tag_select_id="tag_form_tag_search_live_select_component"
  />
</.modal>

<.modal
  :if={@live_action in [:new_note, :edit_note]}
  id="note-modal"
  show
  on_cancel={JS.patch(~p"/timers/#{@timer}")}
>
  <.header>
    <%= @page_title %>
  </.header>
  <.live_component
    module={NoteFormComponent}
    id={@note.id || :new}
    title={@page_title}
    action={@live_action}
    timer_id={@timer_id}
    note={@note}
    patch={~p"/timers/#{@timer.id}"}
  />
</.modal>
