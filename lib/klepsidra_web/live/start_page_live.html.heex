<.header>
  {@today}
  <:actions>
    <div class="flex gap-2">
      <.link phx-keyup="start_timer" patch={~p"/start_timer"}>
        <.outline_button class="flex gap-2 items-center">Start Timer</.outline_button>
      </.link>
      <.link patch={~p"/new_timer"}>
        <.outline_button class="flex gap-2 items-center">Manual Timer</.outline_button>
      </.link>
    </div>
  </:actions>
</.header>

<div :if={@open_timer_count > 0} class="open-timers-list mt-10 rounded-3xl">
  <div class="border rounded-2xl px-6 py-4 text-lg text-white font-medium bg-gradient-to-r from-violet-900 from-15% via-purple-700 via-65% to-purple-900 to-95%">
    <h2 class="px-4 md:px-6 my-4">Running timers</h2>
  </div>

  <.table
    id="open-timers"
    rows={@streams.open_timers}
    row_click={fn {_id, timer} -> JS.navigate(~p"/timers/#{timer.id}?return_to=/") end}
  >
    <:col :let={{_id, timer}} label="Timings" class="align-top max-w-[18ex]">
      <div class="leading-snug inline-block">
        <div class="block font-extrabold text-xs leading-[1.75] text-slate-400 inline-block">
          {timer.start_stamp}
        </div>
        <div
          :if={timer.formatted_start_date}
          class="block align-top uppercase text-xs leading-[1.75] text-pink-600/75 font-normal"
        >
          {timer.formatted_start_date}
        </div>
      </div>
    </:col>
    <:col :let={{_id, timer}} label="Description" class="align-top leading-normal">
      <span
        class="inline-block overflow-hidden w-[37ex] max-h-[2.7rem]"
        title={timer.description |> to_string()}
      >
        {timer.summary}
      </span>
    </:col>
    <:col :let={{_id, timer}} label="Project / Customer" class="align-top leading-normal">
      <div class="">
        {timer.project_name}
      </div>
      <div class="uppercase text-violet-700 font-medium">
        {timer.business_partner_name}
      </div>
    </:col>
    <:col :let={{_id, timer}} label="Tags" class="">
      <div class="flex gap-2">
        <.display_tags :for={tag <- timer.tags} tag={tag} />
      </div>
    </:col>
    <:action :let={{_id, timer}}>
      <div class="sr-only">
        <.link navigate={~p"/timers/#{timer.id}?return_to=/"}>Show</.link>
      </div>
    </:action>
    <:action :let={{_id, timer}}>
      <.link
        patch={~p"/timer_notes/#{timer.id}/notes/new"}
        phx-click={JS.push_focus()}
        class="leading-normal"
      >
        + Note
      </.link>
    </:action>
    <:action :let={{_id, timer}}>
      <.link patch={~p"/edit_timer/#{timer.id}"} class="leading-normal">Edit</.link>
    </:action>
    <:action :let={{_id, timer}}>
      <.link :if={is_nil(timer.end_stamp)} patch={~p"/stop_timer/#{timer.id}"}>Stop</.link>
    </:action>
    <:action :let={{id, timer}}>
      <.link
        phx-click={JS.push("delete-open-timer", value: %{id: timer.id}) |> hide("##{id}")}
        data-confirm="Cancel activity timer?"
        class="leading-normal"
      >
        Cancel
      </.link>
    </:action>
  </.table>
</div>

<div class="closed-timers-list mt-10 rounded-3xl">
  <div class="border-p rounded-2xl px-6 py-4 bg-violet-900 text-white text-lg font-medium bg-gradient-to-r from-violet-900 from-15% via-violet-700 via-65% to-purple-900 to-95%">
    <h2 class="px-4 md:px-6 my-4">Timed activities</h2>
    <div class="statistics__container flex flex-wrap">
      <div class="statistics__item relative px-4 md:px-6 w-1/2 my-4 lg:w-auto group select-none cursor-pointer border-r lg:border-r-0">
        <div class="text-xs font-bold tracking-wide text-gray-500 uppercase dark:text-gray-300 whitespace-nowrap flex w-content border-b group-hover:text-indigo-700 dark:group-hover:text-indigo-500 border-transparent">Activities timed</div>
        <div class="my-1 space-y-2">
          <p class="font-bold text-xl dark:text-gray-100">{@closed_timer_count}</p>
        </div>
      </div>

      <div class="statistics__item relative px-4 md:px-6 w-1/2 my-4 lg:w-auto group select-none cursor-pointer border-r lg:border-r-0 lg:border-l border-gray-300">
        <div class="text-xs font-bold tracking-wide text-gray-500 uppercase dark:text-gray-300 whitespace-nowrap flex w-content border-b group-hover:text-indigo-700 dark:group-hover:text-indigo-500 border-transparent">Total duration</div>
        <div class="my-1 space-y-2">
          <p class="font-bold text-xl dark:text-gray-100">{@human_readable_duration}</p>
        </div>
      </div>

      <div class="statistics__item relative px-4 md:px-6 w-1/2 my-4 lg:w-auto group select-none cursor-pointer border-r lg:border-r-0 lg:border-l border-gray-300">
        <div class="text-xs font-bold tracking-wide text-gray-500 uppercase dark:text-gray-300 whitespace-nowrap flex w-content border-b group-hover:text-indigo-700 dark:group-hover:text-indigo-500 border-transparent">Billable hours</div>
        <div class="my-1 space-y-2">
          <p class="font-bold text-xl dark:text-gray-100">{@human_readable_billing_duration}</p>
        </div>
      </div>
    </div>
  </div>

  <div class="my-6 text-center">
    <p :if={@closed_timer_count == 0}>Let's time something today!</p>
  </div>

  <.table
    :if={@closed_timer_count > 0}
    id="closed-timers"
    rows={@streams.closed_timers}
    row_click={fn {_id, timer} -> JS.navigate(~p"/timers/#{timer.id}?return_to=/") end}
  >
    <:col :let={{_id, timer}} label="Timings" class="align-top max-w-[18ex]">
      <div class="leading-snug inline-block">
        <div class="block font-extrabold text-xs leading-[1.75] text-slate-400 inline-block">
          {timer.start_stamp}&nbsp;&ndash;&nbsp{timer.end_stamp}
        </div>
        <div class="block leading-[1] align-top text-sm leading-normal">
          {timer.formatted_duration}
        </div>
        <div
          :if={timer.formatted_start_date}
          class="block align-top uppercase text-xs leading-[1.75] text-pink-600/75 font-normal"
        >
          {timer.formatted_start_date}
        </div>
      </div>
    </:col>
    <:col :let={{_id, timer}} label="Description" class="align-top leading-normal">
      <span
        class="inline-block overflow-hidden w-[37ex] max-h-[2.7rem]"
        title={timer.description |> to_string()}
      >
        {timer.summary}
      </span>
    </:col>
    <:col :let={{_id, timer}} label="Project / Customer" class="align-top leading-normal">
      <div class="">
        {timer.project_name}
      </div>
      <div class="uppercase text-violet-700 font-medium">
        {timer.business_partner_name}
      </div>
    </:col>
    <:col :let={{_id, timer}} label="Tags" class="">
      <div class="flex gap-2">
        <.display_tags :for={tag <- timer.tags} tag={tag} />
      </div>
    </:col>
    <:action :let={{_id, timer}}>
      <div class="sr-only">
        <.link navigate={~p"/timers/#{timer.id}?return_to=/"}>Show</.link>
      </div>
    </:action>
    <:action :let={{_id, timer}}>
      <.link
        patch={~p"/timer_notes/#{timer.id}/notes/new"}
        phx-click={JS.push_focus()}
        class="leading-normal"
      >
        + Note
      </.link>
    </:action>
    <:action :let={{_id, timer}}>
      <.link patch={~p"/edit_timer/#{timer.id}"} class="leading-normal">Edit</.link>
    </:action>
    <:action :let={{id, timer}}>
      <.link
        phx-click={JS.push("delete-open-timer", value: %{id: timer.id}) |> hide("##{id}")}
        data-confirm="Delete activity timer?"
        class="leading-normal"
      >
        Delete
      </.link>
    </:action>
  </.table>
</div>

<.quote_of_the_day
  quote={@quote.text}
  author={@quote.author_name}
  navigate={~p"/annotations/#{@quote.id}"}
/>

<.modal
  :if={@live_action in [:new_timer, :edit_timer]}
  id="timer-modal"
  show
  on_cancel={JS.patch(~p"/")}
>
  <.live_component
    module={KlepsidraWeb.TimerLive.FormComponent}
    id={:new_timer}
    title={@page_title}
    action={@live_action}
    timer={@timer}
    patch={~p"/"}
    invocation_context={if @live_action == :new_timer, do: :new_timer, else: :edit_timer}
  />
</.modal>

<.modal :if={@live_action in [:start_timer]} id="timer-modal" show on_cancel={JS.patch(~p"/")}>
  <.live_component
    module={KlepsidraWeb.TimerLive.AutomatedTimer}
    id={:start_timer}
    title="Starting timer"
    action={@live_action}
    timer={@timer}
    patch={~p"/"}
    invocation_context={:start_timer}
  />
</.modal>

<.modal :if={@live_action in [:stop_timer]} id="timer-modal" show on_cancel={JS.patch(~p"/")}>
  <.live_component
    module={KlepsidraWeb.TimerLive.AutomatedTimer}
    id={@timer.id}
    title="Stopping timer"
    action={@live_action}
    timer={@timer}
    patch={~p"/"}
    invocation_context={:stop_timer}
  />
</.modal>

<.modal :if={@live_action == :new_note} id="note-modal" show on_cancel={JS.patch(~p"/")}>
  <.header>
    {@page_title}
  </.header>

  <.live_component
    module={KlepsidraWeb.Live.NoteLive.NoteFormComponent}
    id={:new}
    action={@live_action}
    title={@page_title}
    timer_id={@timer_id}
    patch={~p"/"}
  />
</.modal>
